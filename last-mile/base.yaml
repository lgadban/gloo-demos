---
# Source: gloo-ee/charts/gloo/templates/2-gloo-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: gloo
  name: gloo
  namespace: gloo-system
---
# Source: gloo-ee/charts/gloo/templates/3-discovery-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: discovery
  name: discovery
  namespace: gloo-system
---
# Source: gloo-ee/charts/gloo/templates/5-gateway-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: gateway
  name: gateway
  namespace: gloo-system
---
# Source: gloo-ee/charts/gloo/templates/8-gateway-proxy-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: gateway-proxy
  name: gateway-proxy
  namespace: gloo-system
---
# Source: gloo-ee/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
  name: glooe-grafana
  namespace: gloo-system
---
# Source: gloo-ee/charts/prometheus/templates/kube-state-metrics-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-kube-state-metrics
---
# Source: gloo-ee/charts/prometheus/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
---
# Source: gloo-ee/templates/32-apiserver-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: apiserver-ui
  name: apiserver-ui
  namespace: gloo-system # .Values.apiServer.enable
---
# Source: gloo-ee/templates/62-rate-limit-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rate-limit
  name: rate-limit
  namespace: gloo-system
---
# Source: gloo-ee/templates/63-extauth-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: extauth
  name: extauth
  namespace: gloo-system
---
# Source: gloo-ee/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: glooe-grafana
  namespace: gloo-system
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "YWRtaW4="
  ldap-toml: ""
---
# Source: gloo-ee/templates/20-extauth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gloo
    gloo: extauth
  name: extauth-signing-key
  namespace: gloo-system
type: Opaque
data:
  signing-key: "bVNxVTEzMXZkZQ==" # if signingKey.key# if not existingsecret # if standalone or sidecar # enabled
---
# Source: gloo-ee/templates/30-license-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gloo
    gloo: license
  name: license
  namespace: gloo-system
type: Opaque
data:
  license-key: "ZXlKbGVIQWlPakl5TVRRd09EWXdOemdzSW1saGRDSTZNVFU0TXpNMk5qQTNPQ3dpYXlJNklscEJWR2M0ZHlJc0lteDBJam9pZEhKcFlXd2lmUS5tamJpVWNieDM5ckIzQ3VVbHdwVXJWajNndzB5S2Vfcmd3UkxmamFtaUxN"
---
# Source: gloo-ee/templates/9-observability-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: gloo
    gloo: glooe-observability-secrets
  name: glooe-observability-secrets
  namespace: gloo-system
type: Opaque
data:
  # default to the built-in grafana username/password, but allow it to be overridden through the customGrafana object
  GRAFANA_USERNAME: "YWRtaW4="
  GRAFANA_PASSWORD: "YWRtaW4="
---
# Source: gloo-ee/charts/gloo/templates/9-gateway-proxy-configmap.yaml
# config_map
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-proxy-envoy-config
  namespace: gloo-system
  labels:
    app: gloo
    gloo: gateway-proxy
    gateway-proxy-id: gateway-proxy
data:

  envoy.yaml: |
    layered_runtime:
      layers:
      - name: static_layer
        static_layer:
          overload:
            global_downstream_max_connections: 250000
      - name: admin_layer
        admin_layer: {}
    node:
      cluster: gateway
      id: "{{.PodName}}.{{.PodNamespace}}"
      metadata:
        # role's value is the key for the in-memory xds cache (projects/gloo/pkg/xds/envoy.go)
        role: "{{.PodNamespace}}~gateway-proxy"
    static_resources:
      listeners: # if or $statsConfig.enabled (or $spec.readConfig $spec.extraListenersHelper) # $spec.extraListenersHelper
        - name: prometheus_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: AUTO
                    stat_prefix: prometheus
                    route_config:
                      name: prometheus_route
                      virtual_hosts:
                        - name: prometheus_host
                          domains:
                            - "*"
                          routes:
                            - match:
                                path: "/ready"
                                headers:
                                - name: ":method"
                                  exact_match: GET
                              route:
                                cluster: admin_port_cluster
                            - match:
                                prefix: "/metrics"
                                headers:
                                - name: ":method"
                                  exact_match: GET
                              route:
                                prefix_rewrite: "/stats/prometheus"
                                cluster: admin_port_cluster
                    http_filters:
                      - name: envoy.filters.http.router # if $statsConfig.enabled # if $spec.readConfig
      clusters:
      - name: gloo.gloo-system.svc.cluster.local:9977
        alt_stat_name: xds_cluster
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: gloo.gloo-system.svc.cluster.local:9977
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo.gloo-system.svc.cluster.local
                    port_value: 9977
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS
        respect_dns_ttl: true
      - name: rest_xds_cluster
        alt_stat_name: rest_xds_cluster
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: rest_xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo.gloo-system.svc.cluster.local
                    port_value: 9976
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS
        respect_dns_ttl: true
      - name: wasm-cache
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: wasm-cache
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo.gloo-system.svc.cluster.local
                    port_value: 9979
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS
        respect_dns_ttl: true # if .Values.accessLogger.enabled # if $spec.tracing # if $.Values.settings.aws.enableServiceAccountCredentials
      - name: admin_port_cluster
        connect_timeout: 5.000s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin_port_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 19000 # if or $statsConfig.enabled ($spec.readConfig) # if $spec.tracing
    dynamic_resources:
      ads_config:
        api_type: GRPC
        rate_limit_settings: {}
        grpc_services:
        - envoy_grpc: {cluster_name: gloo.gloo-system.svc.cluster.local:9977}
      cds_config:
        ads: {}
      lds_config:
        ads: {}
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000 # if (empty $spec.configMap.data) ## allows full custom # - if not $spec.disabled # range $name, $spec := .Values.gatewayProxies# if .Values.gateway.enabled
---
# Source: gloo-ee/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: glooe-grafana
  namespace: gloo-system
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: gloo
      type: prometheus
      url: http://glooe-prometheus-server:80
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: gloo
      name: gloo
      options:
        path: /var/lib/grafana/dashboards/gloo
      orgId: 1
      type: file
---
# Source: gloo-ee/charts/prometheus/templates/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
data:
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 10s
      scrape_interval: 10s
      scrape_timeout: 10s
    rule_files:
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - honor_labels: true
      job_name: prometheus-pushgateway
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - action: keep
        regex: pushgateway
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
  rules: |
    {}
---
# Source: gloo-ee/templates/10-grafana-dashboards-config-map.yaml
# Config map which grafana reads in order to create custom dashboard dir
apiVersion: v1
kind: ConfigMap
metadata:
  name: glooe-grafana-custom-dashboards
  namespace: gloo-system
  labels:
    app: gloo
    chart: glooe-grafana
    release: glooe
data:
  envoy.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 2,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 14,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(envoy_http_downstream_rq_total{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "requests",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Requests per Second",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "% 2xx": "#7eb26d",
            "% 4xx": "#eab839",
            "% 5xx": "#bf1b00"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 4,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"2\",app=\"gloo\"}[1m])) / sum(irate(envoy_http_downstream_rq_total{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "% 2xx",
              "refId": "B"
            },
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"4\",app=\"gloo\"}[1m])) / sum(irate(envoy_http_downstream_rq_total{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "% 4xx",
              "refId": "C"
            },
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"5\",app=\"gloo\"}[1m])) / sum(irate(envoy_http_downstream_rq_total{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "% 5xx",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Percent Response Code per Second",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "2xx": "#7eb26d",
            "4xx": "#eab839",
            "5xx": "#bf1b00"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"2\",app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "2xx",
              "refId": "A"
            },
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"4\",app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "4xx",
              "refId": "B"
            },
            {
              "expr": "sum(irate(envoy_http_downstream_rq_xx{envoy_response_code_class=\"5\",app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "5xx",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Response Codes per Second",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "id": 12,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(envoy_cluster_upstream_rq_time_sum{envoy_cluster_name=~\".*_gloo-system\",envoy_cluster_name!~\"kube*|gloo*\",app=\"gloo\"}[1m])) / sum(rate(envoy_cluster_upstream_rq_time_count{envoy_cluster_name=~\".*_gloo-system\",envoy_cluster_name!~\"kube*|gloo*\",app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "average time to upstream",
              "refId": "A"
            },
            {
              "expr": "sum(rate(envoy_http_downstream_rq_time_sum{envoy_http_conn_manager_prefix!~\"admin|prometheus|async-client\",app=\"gloo\"}[1m])) / sum(rate(envoy_http_downstream_rq_time_count{envoy_http_conn_manager_prefix!~\"(admin|prometheus|async-client)\",app=\"gloo\"}[1m]))",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 1,
              "legendFormat": "average time from downstream",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Average Request Time",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "ms",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "P90": "#7eb26d",
            "P95": "#eab839",
            "P99": "#6ed0e0",
            "upstream p95": "#f4d598",
            "upstream p99": "#e5a8e2"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 16,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.90, sum(rate(envoy_cluster_upstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P90",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(envoy_cluster_upstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P95",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(envoy_cluster_upstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P99",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Upstream Request Time Percentiles",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "ms",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "P90": "#7eb26d",
            "P95": "#eab839",
            "P99": "#6ed0e0"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 18,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.90, sum(rate(envoy_http_downstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P90",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(envoy_http_downstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P95",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(envoy_http_downstream_rq_time_bucket{app=\"gloo\"}[1m])) by (le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "P99",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Round Trip Time Percentiles",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "ms",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "Denied": "#eab839",
            "Error": "#bf1b00",
            "OK": "#7eb26d",
            "Total": "#6ed0e0"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 1,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "id": 20,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(increase(envoy_cluster_ext_authz_ok{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "OK",
              "refId": "A"
            },
            {
              "expr": "sum(increase(envoy_cluster_ext_authz_denied{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Denied",
              "refId": "B"
            },
            {
              "expr": "sum(increase(envoy_cluster_ext_authz_error{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Error",
              "refId": "C"
            },
            {
              "expr": "sum(increase(envoy_cluster_ext_authz_ok{app=\"gloo\"}[1m])) + sum(increase(envoy_cluster_ext_authz_denied{app=\"gloo\"}[1m])) + sum(increase(envoy_cluster_ext_authz_error{app=\"gloo\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Total",
              "refId": "D"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "External Auth Requests",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "schemaVersion": 16,
      "style": "dark",
      "tags": ["gloo"],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Envoy Statistics",
      "uid": "envoy",
      "version": 1
    }
  kubernetes.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, systemd services statistics. Uses cAdvisor metrics only.",
      "editable": true,
      "gnetId": 315,
      "graphTooltip": 0,
      "iteration": 1548361690492,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 33,
          "panels": [],
          "title": "Network I/O pressure",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "fill": 1,
          "grid": {},
          "gridPos": {
            "h": 5,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "height": "200px",
          "id": 32,
          "isNew": true,
          "legend": {
            "alignAsTable": false,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "sideWidth": 200,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "connected",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\"^$Node$\", namespace=\"$Namespace\"}[1m]))",
              "format": "time_series",
              "instant": false,
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "Received",
              "metric": "network",
              "refId": "A",
              "step": 10
            },
            {
              "expr": "- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\"^$Node$\", namespace=\"$Namespace\"}[1m]))",
              "format": "time_series",
              "instant": false,
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "Sent",
              "metric": "network",
              "refId": "B",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Network I/O pressure",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 34,
          "panels": [],
          "title": "Total usage",
          "type": "row"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "editable": true,
          "error": false,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 8,
            "x": 0,
            "y": 7
          },
          "height": "180px",
          "id": 4,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (container_memory_working_set_bytes{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\"^$Node$\"}) * 100",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "65, 90",
          "title": "Cluster memory usage",
          "transparent": false,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 8,
            "x": 8,
            "y": 7
          },
          "height": "180px",
          "id": 6,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (rate (container_cpu_usage_seconds_total{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\"^$Node$\"}) * 100",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "65, 90",
          "title": "Cluster CPU usage (1m avg)",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 8,
            "x": 16,
            "y": 7
          },
          "height": "180px",
          "id": 7,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (container_fs_usage_bytes{device=~\"^/dev/[sv]d[a-z][1-9]$\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) / sum (container_fs_limit_bytes{device=~\"^/dev/[sv]d[a-z][1-9]$\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) * 100",
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "",
              "metric": "",
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "65, 90",
          "title": "Cluster filesystem usage",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "bytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 0,
            "y": 12
          },
          "height": "1px",
          "id": 9,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "20%",
          "prefix": "",
          "prefixFontSize": "20%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (container_memory_working_set_bytes{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Used",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "bytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 4,
            "y": 12
          },
          "height": "1px",
          "id": 10,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (machine_memory_bytes{kubernetes_io_hostname=~\"^$Node$\"})",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Total",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 8,
            "y": 12
          },
          "height": "1px",
          "id": 11,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": " cores",
          "postfixFontSize": "30%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (rate (container_cpu_usage_seconds_total{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m]))",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Used",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 12,
            "y": 12
          },
          "height": "1px",
          "id": 12,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": " cores",
          "postfixFontSize": "30%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (machine_cpu_cores{kubernetes_io_hostname=~\"^$Node$\"})",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Total",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "bytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 16,
            "y": 12
          },
          "height": "1px",
          "id": 13,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (container_fs_usage_bytes{device=~\"^/dev/[sv]d[a-z][1-9]$\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Used",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "format": "bytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 20,
            "y": 12
          },
          "height": "1px",
          "id": 14,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (container_fs_limit_bytes{device=~\"^/dev/[sv]d[a-z][1-9]$\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
              "interval": "10s",
              "intervalFactor": 1,
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": "",
          "title": "Total",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 15
          },
          "id": 35,
          "panels": [],
          "title": "Pods CPU usage",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "decimals": 3,
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "height": "",
          "id": 17,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "connected",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (pod_name)",
              "format": "time_series",
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "{{ pod_name }}",
              "metric": "container_cpu",
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Pods CPU usage (1m avg)",
          "tooltip": {
            "msResolution": true,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "none",
              "label": "cores",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 23
          },
          "id": 36,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 3,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 7,
                "w": 24,
                "x": 0,
                "y": 23
              },
              "height": "",
              "id": 23,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (rate (container_cpu_usage_seconds_total{systemd_service_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (systemd_service_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "{{ systemd_service_name }}",
                  "metric": "container_cpu",
                  "refId": "A",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "System services CPU usage (1m avg)",
              "tooltip": {
                "msResolution": true,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "none",
                  "label": "cores",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "System services CPU usage",
          "type": "row"
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 24
          },
          "id": 37,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 3,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 7,
                "w": 24,
                "x": 0,
                "y": 24
              },
              "height": "",
              "id": 24,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name=~\"^k8s_.*\",container_name!=\"POD\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (container_name, pod_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "pod: {{ pod_name }} | {{ container_name }}",
                  "metric": "container_cpu",
                  "refId": "A",
                  "step": 10
                },
                {
                  "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, name, image)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                  "metric": "container_cpu",
                  "refId": "B",
                  "step": 10
                },
                {
                  "expr": "sum (rate (container_cpu_usage_seconds_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                  "metric": "container_cpu",
                  "refId": "C",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "Containers CPU usage (1m avg)",
              "tooltip": {
                "msResolution": true,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "none",
                  "label": "cores",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "Containers CPU usage",
          "type": "row"
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 38,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 3,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 13,
                "w": 24,
                "x": 0,
                "y": 25
              },
              "id": 20,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (rate (container_cpu_usage_seconds_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (id)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "{{ id }}",
                  "metric": "container_cpu",
                  "refId": "A",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "All processes CPU usage (1m avg)",
              "tooltip": {
                "msResolution": true,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "none",
                  "label": "cores",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "repeat": null,
          "title": "All processes CPU usage",
          "type": "row"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "id": 39,
          "panels": [],
          "title": "Pods memory usage",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 27
          },
          "id": 25,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sideWidth": 200,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "connected",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum (container_memory_working_set_bytes{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}) by (pod_name)",
              "format": "time_series",
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "{{ pod_name }}",
              "metric": "container_memory_usage:sort_desc",
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Pods memory usage",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 34
          },
          "id": 40,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 2,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 7,
                "w": 24,
                "x": 0,
                "y": 34
              },
              "id": 26,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sideWidth": 200,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (container_memory_working_set_bytes{systemd_service_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}) by (systemd_service_name)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "{{ systemd_service_name }}",
                  "metric": "container_memory_usage:sort_desc",
                  "refId": "A",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "System services memory usage",
              "tooltip": {
                "msResolution": false,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "System services memory usage",
          "type": "row"
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 35
          },
          "id": 41,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 2,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 7,
                "w": 24,
                "x": 0,
                "y": 35
              },
              "id": 27,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sideWidth": 200,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (container_memory_working_set_bytes{image!=\"\",name=~\"^k8s_.*\",container_name!=\"POD\",kubernetes_io_hostname=~\"^$Node$\"}) by (container_name, pod_name)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "pod: {{ pod_name }} | {{ container_name }}",
                  "metric": "container_memory_usage:sort_desc",
                  "refId": "A",
                  "step": 10
                },
                {
                  "expr": "sum (container_memory_working_set_bytes{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}) by (kubernetes_io_hostname, name, image)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                  "metric": "container_memory_usage:sort_desc",
                  "refId": "B",
                  "step": 10
                },
                {
                  "expr": "sum (container_memory_working_set_bytes{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}) by (kubernetes_io_hostname, rkt_container_name)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                  "metric": "container_memory_usage:sort_desc",
                  "refId": "C",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "Containers memory usage",
              "tooltip": {
                "msResolution": false,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "Containers memory usage",
          "type": "row"
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 36
          },
          "id": 42,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 2,
              "editable": true,
              "error": false,
              "fill": 0,
              "grid": {},
              "gridPos": {
                "h": 13,
                "w": 24,
                "x": 0,
                "y": 36
              },
              "id": 28,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": 200,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": true,
              "targets": [
                {
                  "expr": "sum (container_memory_working_set_bytes{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) by (id)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "{{ id }}",
                  "metric": "container_memory_usage:sort_desc",
                  "refId": "A",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "All processes memory usage",
              "tooltip": {
                "msResolution": false,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "All processes memory usage",
          "type": "row"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 37
          },
          "id": 43,
          "panels": [],
          "title": "Pods network I/O",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "gloo",
          "decimals": 2,
          "editable": true,
          "error": false,
          "fill": 1,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 38
          },
          "id": 16,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sideWidth": 200,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "connected",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (pod_name)",
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "-> {{ pod_name }}",
              "metric": "network",
              "refId": "A",
              "step": 10
            },
            {
              "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (pod_name)",
              "interval": "10s",
              "intervalFactor": 1,
              "legendFormat": "<- {{ pod_name }}",
              "metric": "network",
              "refId": "B",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Pods network I/O (1m avg)",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 45
          },
          "id": 44,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 2,
              "editable": true,
              "error": false,
              "fill": 1,
              "grid": {},
              "gridPos": {
                "h": 7,
                "w": 24,
                "x": 0,
                "y": 45
              },
              "id": 30,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sideWidth": 200,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (container_name, pod_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "-> pod: {{ pod_name }} | {{ container_name }}",
                  "metric": "network",
                  "refId": "B",
                  "step": 10
                },
                {
                  "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (container_name, pod_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "<- pod: {{ pod_name }} | {{ container_name }}",
                  "metric": "network",
                  "refId": "D",
                  "step": 10
                },
                {
                  "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, name, image)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "-> docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                  "metric": "network",
                  "refId": "A",
                  "step": 10
                },
                {
                  "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, name, image)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "<- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                  "metric": "network",
                  "refId": "C",
                  "step": 10
                },
                {
                  "expr": "sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "-> rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                  "metric": "network",
                  "refId": "E",
                  "step": 10
                },
                {
                  "expr": "- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)",
                  "hide": false,
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "<- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                  "metric": "network",
                  "refId": "F",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "Containers network I/O (1m avg)",
              "tooltip": {
                "msResolution": false,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "Bps",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "Containers network I/O",
          "type": "row"
        },
        {
          "collapsed": true,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 46
          },
          "id": 45,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "datasource": "gloo",
              "decimals": 2,
              "editable": true,
              "error": false,
              "fill": 1,
              "grid": {},
              "gridPos": {
                "h": 13,
                "w": 24,
                "x": 0,
                "y": 46
              },
              "id": 29,
              "isNew": true,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": 200,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "links": [],
              "nullPointMode": "connected",
              "percentage": false,
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "sum (rate (container_network_receive_bytes_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (id)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "-> {{ id }}",
                  "metric": "network",
                  "refId": "A",
                  "step": 10
                },
                {
                  "expr": "- sum (rate (container_network_transmit_bytes_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (id)",
                  "interval": "10s",
                  "intervalFactor": 1,
                  "legendFormat": "<- {{ id }}",
                  "metric": "network",
                  "refId": "B",
                  "step": 10
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeShift": null,
              "title": "All processes network I/O (1m avg)",
              "tooltip": {
                "msResolution": false,
                "shared": true,
                "sort": 2,
                "value_type": "cumulative"
              },
              "type": "graph",
              "xaxis": {
                "show": true
              },
              "yaxes": [
                {
                  "format": "Bps",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ]
            }
          ],
          "title": "All processes network I/O",
          "type": "row"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 16,
      "style": "dark",
      "tags": [
        "kubernetes",
        "gloo"
      ],
      "templating": {
        "list": [
          {
            "allValue": ".*",
            "current": {
              "tags": [],
              "text": "All",
              "value": "$__all"
            },
            "datasource": "gloo",
            "definition": "label_values(kubernetes_io_hostname)",
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": false,
            "name": "Node",
            "options": [],
            "query": "label_values(kubernetes_io_hostname)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "gloo-system",
              "value": "gloo-system"
            },
            "datasource": "gloo",
            "definition": "label_values(namespace)",
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "Namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "browser",
      "title": "Kubernetes cluster monitoring (via Prometheus)",
      "uid": "kubernetes",
      "version": 1
    }
---
# Source: gloo-ee/templates/37-apiserver-envoy-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-apiserver-envoy-config
  namespace: gloo-system
  labels:
    app: gloo
    gloo: apiserver-ui
data:
  config.yaml: |-
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: gloo-webgrpc
                virtual_hosts:
                - name: gloo-webgrpc
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                      headers:
                      - name: content-type
                        prefix_match: application/grpc
                    route:
                      cluster: gloo-grpcserver
                      timeout: 15s
                  - match:
                      prefix: "/"
                    route:
                      cluster: gloo-ui
                      timeout: 15s
                  cors:
                    allow_origin_string_match:
                    - safe_regex:
                        google_re2: {}
                        regex: \*
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web
                    max_age: "1728000"
                    expose_headers: grpc-status,grpc-message
                    filter_enabled: # the values 100/HUNDRED are the default. Still, we want to explicitly define them until we know that the envoy we are using conforms to the new api
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
              http_filters:
              - name: envoy.filters.http.grpc_web
              - name: envoy.filters.http.cors
              - name: envoy.filters.http.router
      clusters:
      - name: gloo-grpcserver
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        load_assignment:
          cluster_name: gloo-grpcserver
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 10101
      - name: gloo-ui
        connect_timeout: 0.25s
        type: static
        lb_policy: round_robin
        load_assignment:
          cluster_name: gloo-ui
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 20202
      - name: admin_port_cluster
        connect_timeout: 5.000s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin_port_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 19000
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000
---
# Source: gloo-ee/templates/9-observability-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: glooe-observability-config
  namespace: gloo-system
  labels:
    app: gloo
    release: glooe
data:
  GRAFANA_URL: http://glooe-grafana.gloo-system.svc.cluster.local:80
  DASHBOARD_JSON_TEMPLATE: "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"Envoy proxy monitoring Dashboard with cluster and host level templates. \",\n  \"editable\": true,\n  \"graphTooltip\": 0,\n  \"uid\": \"{{.Uid}}\",\n  \"id\": null,\n  \"links\": [],\n  \"timezone\": \"\",\n  \"title\": \"{{.EnvoyClusterName}}\",\n  \"version\": 4,\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"gloo\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 5\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"envoy_cluster_upstream_cx_active{ envoy_cluster_name=\\\"{{.EnvoyClusterName}}\\\" }\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{.NameTemplate}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total active connections\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"gloo\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 5\n      },\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"irate(envoy_cluster_upstream_rq_total{ envoy_cluster_name=\\\"{{.EnvoyClusterName}}\\\" }[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{.NameTemplate}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total requests\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"gloo\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 19\n      },\n      \"id\": 15,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"irate(envoy_cluster_upstream_cx_rx_bytes_total{ envoy_cluster_name=\\\"{{.EnvoyClusterName}}\\\" }[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{.NameTemplate}} - in\",\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"irate(envoy_cluster_upstream_cx_rx_bytes_total{ envoy_cluster_name=\\\"{{.EnvoyClusterName}}\\\" }[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{.NameTemplate}} - out\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Upstream Network Traffic\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"decbytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"refresh\": \"30s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [\"gloo\", \"dynamic\"],\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  }\n}"
---
# Source: gloo-ee/charts/grafana/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glooe-grafana
  namespace: gloo-system
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Mi"
---
# Source: gloo-ee/charts/prometheus/templates/server-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "16Gi"
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: kube-resource-watcher-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "secrets", "endpoints", "configmaps", "namespaces"]
  verbs: ["get", "list", "watch"]
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: gloo-upstream-mutator-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: ["gloo.solo.io"]
  resources: ["upstreams"]
  # update is needed for status updates
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: gloo-resource-reader-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: ["gloo.solo.io", "enterprise.gloo.solo.io"]
  resources: ["upstreams","upstreamgroups", "proxies", "authconfigs"]
  # update is needed for status updates
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["ratelimit.solo.io"]
  resources: ["ratelimitconfigs","ratelimitconfigs/status"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: [""] # get/update on configmaps for recording envoy metrics
  resources: ["configmaps"]
  verbs: ["get", "update"]
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: settings-user-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: ["gloo.solo.io"]
  resources: ["settings"]
  # update is needed for status updates
  verbs: ["get", "list", "watch", "create"]
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: gloo-resource-mutator-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: ["gloo.solo.io"]
  resources: ["proxies"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
# Source: gloo-ee/charts/gloo/templates/20-namespace-clusterrole-gateway.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: gateway-resource-reader-gloo-system
    labels:
        app: gloo
        gloo: rbac
rules:
- apiGroups: ["gateway.solo.io"]
  resources: ["virtualservices", "routetables"]
  # update is needed for status updates
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["gateway.solo.io"]
  resources: ["gateways"]
  # update is needed for status updates, create for creating the default ones.
  verbs: ["get", "list", "watch", "create", "update"]
---
# Source: gloo-ee/charts/prometheus/templates/alertmanager-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "alertmanager"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-glooe-prometheus-alertmanager
rules:
  []
---
# Source: gloo-ee/charts/prometheus/templates/kube-state-metrics-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-kube-state-metrics
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - persistentvolumeclaims
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - endpoints
      - secrets
      - configmaps
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - ingresses
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - list
      - watch
---
# Source: gloo-ee/charts/prometheus/templates/pushgateway-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "pushgateway"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-glooe-prometheus-pushgateway
rules:
  []
---
# Source: gloo-ee/charts/prometheus/templates/server-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: gloo-ee/templates/36-apiserver-role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: apiserver-ui-gloo-system
  labels:
    app: gloo
    gloo: rbac
rules:
# Group 1: these rules apply to read-only and enterprise apiserver
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "namespaces", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gloo.solo.io"]
    resources: ["artifacts", "upstreams", "upstreamgroups", "proxies", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gloo.solo.io"]
    resources: ["settings"]
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: ["gateway.solo.io"]
    resources: ["gateways"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gateway.solo.io"]
    resources: ["virtualservices", "routetables"]
    verbs: ["get", "list", "watch"]
# Group 2: these rules only apply to the enterprise apiserver (enables mutations)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["gloo.solo.io"]
    resources: ["artifacts", "settings", "upstreams", "upstreamgroups", "proxies", "secrets"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["gateway.solo.io"]
    resources: ["gateways"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["gateway.solo.io"]
    resources: ["virtualservices", "routetables"]
    verbs: ["create", "update", "delete"] # .Values.apiServer.enterprise # .Values.apiServer.enable
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-resource-watcher-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: gloo
  namespace: gloo-system
- kind: ServiceAccount
  name: discovery
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: kube-resource-watcher-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-upstream-mutator-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: discovery
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: gloo-upstream-mutator-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-reader-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: gloo
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: gloo-resource-reader-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: settings-user-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: gloo
  namespace: gloo-system
- kind: ServiceAccount
  name: gateway
  namespace: gloo-system
- kind: ServiceAccount
  name: discovery
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: settings-user-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-mutator-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: gateway
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: gloo-resource-mutator-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/gloo/templates/23-namespace-clusterrolebinding-gateway.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gateway-resource-reader-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
- kind: ServiceAccount
  name: gateway
  namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: gateway-resource-reader-gloo-system
  apiGroup: rbac.authorization.k8s.io
---
# Source: gloo-ee/charts/prometheus/templates/alertmanager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "alertmanager"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-glooe-prometheus-alertmanager
subjects:
  - kind: ServiceAccount
    name: glooe-glooe-prometheus-alertmanager
    namespace: gloo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: glooe-glooe-prometheus-alertmanager
---
# Source: gloo-ee/charts/prometheus/templates/kube-state-metrics-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: glooe-prometheus-kube-state-metrics
    namespace: gloo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: glooe-prometheus-kube-state-metrics
---
# Source: gloo-ee/charts/prometheus/templates/pushgateway-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "pushgateway"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-glooe-prometheus-pushgateway
subjects:
  - kind: ServiceAccount
    name: glooe-glooe-prometheus-pushgateway
    namespace: gloo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: glooe-glooe-prometheus-pushgateway
---
# Source: gloo-ee/charts/prometheus/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
subjects:
  - kind: ServiceAccount
    name: glooe-prometheus-server
    namespace: gloo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: glooe-prometheus-server
---
# Source: gloo-ee/templates/35-apiserver-rolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: apiserver-ui-role-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
  - kind: ServiceAccount
    name: apiserver-ui
    namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: apiserver-ui-gloo-system
  apiGroup: rbac.authorization.k8s.io # .Values.apiServer.enable # glooRbac.create
---
# Source: gloo-ee/templates/61-rolebinding-settings-user.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: glooe-settings-user-role-binding-gloo-system
  labels:
    app: gloo
    gloo: rbac
subjects:
  - kind: ServiceAccount
    name: observability
    namespace: gloo-system
roleRef:
  kind: ClusterRole
  name: settings-user-gloo-system
  apiGroup: rbac.authorization.k8s.io # if defaultInstallation or customGrafana # if glooRbac.create
---
# Source: gloo-ee/charts/gloo/templates/2-gloo-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo
    gloo: gloo
  name: gloo
  namespace: gloo-system
spec:
  ports:
  - name: grpc-xds
    port: 9977
    protocol: TCP
  - name: rest-xds
    port: 9976
    protocol: TCP
  - name: grpc-validation
    port: 9988
    protocol: TCP
  - name: wasm-cache
    port: 9979
    protocol: TCP
  selector:
    gloo: gloo
---
# Source: gloo-ee/charts/gloo/templates/5-gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    discovery.solo.io/function_discovery: disabled
    app: gloo
    gloo: gateway
  name: gateway
  namespace: gloo-system
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    # this should map to projects/gateway/pkg/defaults.ValidationWebhookBindPort
    targetPort: 8443
  selector:
    gloo: gateway
---
# Source: gloo-ee/charts/gloo/templates/8-gateway-proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo
    gloo: gateway-proxy
    gateway-proxy-id: gateway-proxy
  name: gateway-proxy
  namespace: gloo-system
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-1:410461945957:certificate/52a75a75-ab2c-42ed-b7d8-2176fa41bda4"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  # port order matters due to this issue: https://github.com/solo-io/gloo/issues/2571
  ports:
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http # if failover.enabled # if failover
  selector:
    gateway-proxy-id: gateway-proxy
    gateway-proxy: live
  type: LoadBalancer # $spec.service.loadBalancerIP # $spec.service.loadBalancerSourceRanges # $spec.service.type "LoadBalancer" # range $name, $spec := .Values.gatewayProxies # if not $spec.disabled
 # if .Values.gateway.enabled
---
# Source: gloo-ee/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: glooe-grafana
  namespace: gloo-system
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000

  selector:
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
---
# Source: gloo-ee/charts/prometheus/templates/kube-state-metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-kube-state-metrics
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
  type: "ClusterIP"
---
# Source: gloo-ee/charts/prometheus/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: glooe-prometheus
    release: glooe
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: gloo-ee/templates/0-redis-service.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo
    gloo: redis
  name: redis
  namespace: gloo-system
spec:
  ports:
    - name: redis
      port: 6379
      protocol: TCP
  selector:
    gloo: redis
---
# Source: gloo-ee/templates/22-extauth-service.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo
    gloo: extauth
  name: extauth
  namespace: gloo-system
spec:
  ports:
  - name: grpc
    port: 8083
    protocol: TCP
  selector:
    gloo: extauth
---
# Source: gloo-ee/templates/3-rate-limit-service.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo
    gloo: rate-limit
  name: rate-limit
  namespace: gloo-system
spec:
  ports:
  - name: grpc
    port: 18081
    protocol: TCP
  selector:
    gloo: rate-limit
---
# Source: gloo-ee/templates/34-apiserver-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: apiserver-ui
  namespace: gloo-system
  labels:
    app: gloo
    gloo: apiserver-ui
  annotations:
    gloo.solo.io/h2_service: "true"
spec:
  ports:
    - name: static
      port: 8080
      protocol: TCP
  selector:
    gloo: apiserver-ui
  type: ClusterIP # .Values.apiServer.enable
---
# Source: gloo-ee/charts/gloo/templates/1-gloo-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: gloo
  name: gloo
  namespace: gloo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: gloo
  template:
    metadata:
      labels:
        gloo: gloo
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: gloo
      volumes:
      - name: labels-volume
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
      containers:
      - image: quay.io/solo-io/gloo-ee:1.5.12
        imagePullPolicy: IfNotPresent
        name: gloo
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10101
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 9977
          name: grpc-xds
          protocol: TCP
        - containerPort: 9976
          name: rest-xds
          protocol: TCP
        - containerPort: 9988
          name: grpc-validation
          protocol: TCP
        - containerPort: 9979
          name: wasm-cache
          protocol: TCP
        volumeMounts:
        - name: labels-volume
          mountPath: /etc/gloo
          readOnly: true
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: START_STATS_SERVER
            value: "true"
        readinessProbe:
          tcpSocket:
            port: 9977
          initialDelaySeconds: 1
          periodSeconds: 2
          failureThreshold: 10
---
# Source: gloo-ee/charts/gloo/templates/3-discovery-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: discovery
  name: discovery
  namespace: gloo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: discovery
  template:
    metadata:
      labels:
        gloo: discovery
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: discovery
      containers:
      - image: quay.io/solo-io/discovery:1.5.13
        imagePullPolicy: IfNotPresent
        name: discovery
        # container security context
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10101
          capabilities:
            drop:
            - ALL
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: START_STATS_SERVER
            value: "true"
      # Pod security context
      securityContext:
        fsGroup: 10101
---
# Source: gloo-ee/charts/gloo/templates/5-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: gateway
  name: gateway
  namespace: gloo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: gateway
  template:
    metadata:
      labels:
        gloo: gateway
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: gateway
      containers:
      - image: quay.io/solo-io/gateway:1.5.13
        imagePullPolicy: IfNotPresent
        name: gateway
        ports:
          - containerPort: 8443
            name: https
            protocol: TCP

        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10101
          capabilities:
            drop:
            - ALL
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: START_STATS_SERVER
            value: "true"
          - name: VALIDATION_MUST_START
            value: "true"
        volumeMounts:
          - mountPath: /etc/gateway/validation-certs
            name: validation-certs
        readinessProbe:
          tcpSocket:
            port: 8443
          initialDelaySeconds: 1
          periodSeconds: 2
          failureThreshold: 10
      volumes:
        - name: validation-certs
          secret:
            defaultMode: 420
            secretName: gateway-validation-certs
---
# Source: gloo-ee/charts/gloo/templates/7-gateway-proxy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: gateway-proxy
    gateway-proxy-id: gateway-proxy
  name: gateway-proxy
  namespace: gloo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: gateway-proxy
      gateway-proxy-id: gateway-proxy
  template:
    metadata:
      labels:
        gloo: gateway-proxy
        gateway-proxy-id: gateway-proxy
        gateway-proxy: live

      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        fsGroup: 10101
        runAsUser: 10101
      serviceAccountName: gateway-proxy
      containers:
      - args:
          - --disable-hot-restart
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: quay.io/solo-io/gloo-ee-envoy-wrapper:1.5.12
        imagePullPolicy: IfNotPresent
        name: gateway-proxy
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10101
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8080
          name: https
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config # $global.glooMtls.enabled # $spec.extraContainersHelper # $global.glooMtls.enabled or $.Values.istioSDS.enabled
      volumes:
      - configMap:
          name: gateway-proxy-envoy-config
        name: envoy-config
---
# Source: gloo-ee/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glooe-grafana
  namespace: gloo-system
  labels:
    helm.sh/chart: grafana-5.0.8
    app.kubernetes.io/name: glooe-grafana
    app.kubernetes.io/instance: glooe
    app.kubernetes.io/version: "6.6.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: glooe-grafana
      app.kubernetes.io/instance: glooe
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: glooe-grafana
        app.kubernetes.io/instance: glooe
      annotations:
        checksum/config: 2b4d42c5ceb8af238afdd2d0f4b34dfda09c07b6e16157a846e0bc35f4744f7b
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: a2be9edd36180c393deae0cdd106a2baeb04b8c0577270d37d957dfacc9a5858
    spec:
      
      serviceAccountName: glooe-grafana
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      initContainers:
      containers:
        - name: grafana
          image: "grafana/grafana:6.6.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: dashboards-gloo
              mountPath: "/var/lib/grafana/dashboards/gloo"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: glooe-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: glooe-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: glooe-grafana
          
        - name: dashboards-gloo
          configMap:
            name: glooe-grafana-custom-dashboards
        - name: storage
          persistentVolumeClaim:
            claimName: glooe-grafana
---
# Source: gloo-ee/charts/prometheus/templates/kube-state-metrics-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "kube-state-metrics"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-kube-state-metrics
spec:
  selector:
    matchLabels:
      component: "kube-state-metrics"
      app: glooe-prometheus
      release: glooe
  replicas: 1
  template:
    metadata:
      labels:
        component: "kube-state-metrics"
        app: glooe-prometheus
        release: glooe
        chart: prometheus-9.5.1
        heritage: Helm
    spec:
      serviceAccountName: glooe-prometheus-kube-state-metrics
      containers:
        - name: glooe-prometheus-kube-state-metrics
          image: "quay.io/coreos/kube-state-metrics:v1.6.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: metrics
              containerPort: 8080
          resources:
            {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
---
# Source: gloo-ee/charts/prometheus/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: glooe-prometheus
    release: glooe
    chart: prometheus-9.5.1
    heritage: Helm
  name: glooe-prometheus-server
spec:
  selector:
    matchLabels:
      component: "server"
      app: glooe-prometheus
      release: glooe
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: glooe-prometheus
        release: glooe
        chart: prometheus-9.5.1
        heritage: Helm
    spec:
      serviceAccountName: glooe-prometheus-server
      containers:
        - name: glooe-prometheus-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: glooe-prometheus-server
          image: "prom/prometheus:v2.13.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: glooe-prometheus-server
        - name: storage-volume
          persistentVolumeClaim:
            claimName: glooe-prometheus-server
---
# Source: gloo-ee/templates/1-redis-deployment.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: redis
  name: redis
  namespace: gloo-system
spec:
  selector:
    matchLabels:
      gloo: redis
  template:
    metadata:
      labels:
        gloo: redis
    spec:
      containers:
        - image: docker.io/redis:5
          imagePullPolicy:  IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
          env:
            - name: MASTER
              value: "true"
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
      
      securityContext:
        runAsNonRoot: true
        runAsGroup: 999
        fsGroup: 999
        runAsUser: 999
      volumes:
        - name: data
          emptyDir: {}
---
# Source: gloo-ee/templates/2-rate-limit-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: rate-limit
  name: rate-limit
  namespace: gloo-system
spec: 
  selector:
    matchLabels:
      gloo: rate-limit
  template:
    metadata:
      labels:
        gloo: rate-limit
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true" 
    spec:
      serviceAccountName: rate-limit
      containers:
        - image: quay.io/solo-io/rate-limit-ee:1.5.12
          imagePullPolicy: IfNotPresent
          name: rate-limit 
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GLOO_ADDRESS
              value: gloo:9977 
            - name: START_STATS_SERVER
              value: "true"  # .Values.rateLimit.deployment.dynamodb.secretName
            - name: REDIS_URL
              value: redis:6379
            - name: REDIS_SOCKET_TYPE
              value: tcp # .Values.rateLimit.deployment.dynamodb.secretName 
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 10101 # .Values.global.glooMtls.enabled
---
# Source: gloo-ee/templates/21-extauth-deployment.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: extauth
  name: extauth
  namespace: gloo-system
spec:
  selector:
    matchLabels:
      gloo: extauth
  template:
    metadata:
      labels:
        gloo: extauth
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true" # $extAuth.deployment.stats
    spec:
      serviceAccountName: extauth
      containers:
      - image: quay.io/solo-io/extauth-ee:1.5.12
        imagePullPolicy: IfNotPresent
        name: extauth
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SERVICE_NAME
            value: "ext-auth"
          - name: GLOO_ADDRESS
            value: gloo:9977
          - name: SIGNING_KEY
            valueFrom:
              secretKeyRef:
                name: extauth-signing-key
                key: signing-key
          - name: SERVER_PORT
            value: "8083"
          - name: USER_ID_HEADER
            value: "x-user-id"
          - name: START_STATS_SERVER
            value: "true"
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 8083
          initialDelaySeconds: 1
          failureThreshold: 3
          successThreshold: 1
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 10101
        fsGroup: 10101
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    gloo: gateway-proxy
                topologyKey: kubernetes.io/hostname
---
# Source: gloo-ee/templates/33-apiserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  namespace: gloo-system
  labels:
    app: gloo
    gloo: apiserver-ui
spec:
  selector:
    matchLabels:
      app: gloo
      gloo: apiserver-ui
  template:
    metadata:
      labels:
        app: gloo
        gloo: apiserver-ui
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: apiserver-ui
      securityContext:
        runAsNonRoot: true
        runAsUser: 10101
      containers:
        - name: apiserver-ui
          image: quay.io/solo-io/grpcserver-ui:1.5.12
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: empty-cache
              mountPath: /var/cache/nginx
            - name: empty-run
              mountPath: /var/run
          ports:
            - name: static
              containerPort: 8080
              protocol: TCP
        - name: apiserver
          image: quay.io/solo-io/grpcserver-ee:1.5.12
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: RBAC_NAMESPACED
              value: "false"
            - name: GRPC_PORT
              value: '10101'
            - name: START_STATS_SERVER
              value: "true" # stats
            - name: NO_AUTH
              value: "1"
            - name: GLOO_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: license
                  key: license-key # .Values.apiServer.enterprise
          ports:
            - name: grpcport
              containerPort: 10101
              protocol: TCP
        - name: gloo-grpcserver-envoy
          securityContext:
            runAsUser: 101
          env:
            
            - name: ENVOY_UID
              value: "0"
          image: quay.io/solo-io/grpcserver-envoy:1.5.12
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /
              port: 8080 # .Values.global.glooMtls.enabled
            periodSeconds: 10
            initialDelaySeconds: 5
          volumeMounts:
          - name: envoy-config
            mountPath: /etc/envoy
            readOnly: true # .Values.global.glooMtls.enabled # .Values.global.glooMtls.enabled
      volumes:
        - name: empty-cache
          emptyDir: {}
        - name: empty-run
          emptyDir: {}
        - name: envoy-config
          configMap:
            name: default-apiserver-envoy-config # .Values.global.glooMtls.enabled
       # .Values.apiServer.enable
---
# Source: gloo-ee/charts/gloo/templates/6.5-gateway-certgen-job.yaml
# .Values.global.glooRbac.create
---
# Source: gloo-ee/charts/gloo/templates/7-gateway-proxy-deployment.yaml
# if envoySidecar
---
# Source: gloo-ee/charts/gloo/templates/9-gateway-proxy-configmap.yaml
# if envoySidecar
---
# Source: gloo-ee/templates/0-redis-service.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # .Values.rateLimit.enabled
---
# Source: gloo-ee/templates/1-redis-deployment.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # .Values.rateLimit.enabled
---
# Source: gloo-ee/templates/21-extauth-deployment.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # .Values.global.extensions.standaloneDeployment # enabled
---
# Source: gloo-ee/templates/22-extauth-service.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # enabled # .Values.global.extensions.extAuth.standaloneDeployment
---
# Source: gloo-ee/templates/23-extauth-upstream.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # $extAuth.standaloneDeployment # .Values.global.extensions.extAuth.enabled
---
# Source: gloo-ee/templates/24-extauth-sidecar-config.yaml
# if envoySidecar
---
# Source: gloo-ee/templates/25-rate-limit-sidecar-config.yaml
# if envoySidecar
---
# Source: gloo-ee/templates/3-rate-limit-service.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # .Values.rateLimit.enabled
---
# Source: gloo-ee/templates/4-ratelimit-upstream.yaml
# if not $spec.disabled # range $name, $spec := $.ProxiesToCreateDataplaneFor # .Values.rateLimit.enabled
---
# Source: gloo-ee/templates/8-observability-rbac.yaml
# observability enabled # glooRbac.create
---
# Source: gloo-ee/charts/gloo/templates/8-default-gateways.yaml
apiVersion: gateway.solo.io/v1
kind: Gateway
metadata:
  name: gateway-proxy
  namespace: gloo-system
  labels:
    app: gloo
spec:
  bindAddress: "::"
  bindPort: 8080
  httpGateway: {}
  useProxyProto: false
  ssl: false
  proxyNames:
  - gateway-proxy
---
# Source: gloo-ee/charts/gloo/templates/8-default-gateways.yaml
apiVersion: gateway.solo.io/v1
kind: Gateway
metadata:
  name: gateway-proxy-ssl
  namespace: gloo-system
  labels:
    app: gloo
spec:
  bindAddress: "::"
  bindPort: 8080
  httpGateway: {}
  useProxyProto: false
  ssl: true
  proxyNames:
  - gateway-proxy # if failover.enabled # if failover # if  $spec.gatewaySettings and (not $spec.disabled) # range gateways
---
# Source: gloo-ee/templates/40-settings.yaml
apiVersion: gloo.solo.io/v1
kind: Settings
metadata:
  labels:
    app: gloo
    gloo: settings
  name: default
  namespace: gloo-system
spec:
  gloo:
    xdsBindAddr: "0.0.0.0:9977"
    restXdsBindAddr: "0.0.0.0:9976"
    # This has to be set "default false" as the json value has the "omitEmpty" flag, which causes a false boolean
    # to be omitted. This is an issue as the default behavior for this value in the settings will be "nil == true".
    enableRestEds: false
    disableKubernetesDestinations: false
    disableProxyGarbageCollection: false
  discoveryNamespace: gloo-system
  kubernetesArtifactSource: {}
  kubernetesConfigSource: {}
  kubernetesSecretSource: {}
  refreshRate: 60s
  gateway:
    validation:
      proxyValidationServerAddr: "gloo:9988"
      alwaysAccept: true
  discovery:
    fdsMode: WHITELIST
  extauth:
    extauthzServerRef:
      # arbitrarily default to the standalone deployment name even if we're using both
      name: extauth
      namespace: gloo-system
  ratelimitServer:
    ratelimit_server_ref:
      name: rate-limit
      namespace: gloo-system
---
# Source: gloo-ee/templates/23-extauth-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  labels:
    app: gloo
    gloo: extauth
  name: extauth
  namespace: gloo-system
spec:
  use_http2: true
  healthChecks:
  - timeout: 5s
    interval: 10s
    unhealthyThreshold: 3
    healthyThreshold: 3
    grpcHealthCheck:
      serviceName: extauth
  kube:
    serviceName: extauth
    serviceNamespace: gloo-system
    servicePort:  8083
    serviceSpec:
      grpc: {}
---
# Source: gloo-ee/templates/4-ratelimit-upstream.yaml
# .Values.global.extensions.dataplanePerProxy
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  labels:
    app: gloo
    gloo: rate-limit
  name: rate-limit
  namespace: gloo-system
spec:
  healthChecks:
  - timeout: 5s
    interval: 1m
    unhealthyThreshold: 5
    healthyThreshold: 5
    grpcHealthCheck:
      serviceName: ratelimit
  kube:
    serviceName: rate-limit
    serviceNamespace: gloo-system
    servicePort:  18081
    serviceSpec:
      grpc: {}
