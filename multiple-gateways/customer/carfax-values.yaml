gloo:
  gatewayProxies:
    gatewayProxy:
      gatewaySettings:
        customHttpsGateway:
          virtualServiceSelector:
            # defined under metadata.labels in virtual services
            gloo-setup: "true"
          virtualServiceNamespaces:
            - "*"
          options:
            healthCheck:
              path: /envoy/healthz
      # expose a read-only subset of the envoy admin api
      readConfig: false
      podTemplate:
        probes: true
        customReadinessProbe:
          httpGet:
            path: /envoy/healthz
            port: 9443
            scheme: HTTPS
          failureThreshold: 2
          initialDelaySeconds: 1
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        # label selector for nodes
        nodeSelector:
          node-role.kubernetes.io/ingress-gloo: "true"
        gracefulShutdown:
          enabled: true
          sleepTimeSeconds: 30
        terminationGracePeriodSeconds: 90
        tolerations:
          - key: "dedicated"
            operator: "Equal"
            value: "ingress-gloo"
            effect: "NoSchedule"
        httpPort: 9080
        httpsPort: 9443
        image: {}
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 150Mi
      kind:
        deployment:
          replicas: 1
      #        daemonSet:
      #          # whether or not to enable host networking on the gateway-proxy pod. Only relevant when running as a DaemonSet
      #          hostPort: true
      service:
        # gateway service type. default is LoadBalancer
        type: NodePort
        # static cluster IP (or None) when service type is ClusterIP
        #clusterIP: None
        name: gateway-proxy-svc
        httpPort: 9080
        httpsPort: 9443
        httpsNodePort: 30443
    gatewayProxyInternal:
      antiAffinity: false
      configMap:
        data: null
      gatewaySettings:
        customHttpsGateway:
          virtualServiceSelector:
            # defined under metadata.labels in virtual services
            gloo-internal: "true"
          virtualServiceNamespaces:
            - "*"
          options:
            healthCheck:
              path: /envoy/healthz
        disableGeneratedGateways: false
        options: {}
        useProxyProto: false
      globalDownstreamMaxConnections: 250000
      kind:
        deployment:
          replicas: 1
      #        daemonSet:
      #          # whether or not to enable host networking on the gateway-proxy pod. Only relevant when running as a DaemonSet
      #          hostPort: true
      loopBackAddress: 127.0.0.1
      podTemplate:
        customReadinessProbe:
          httpGet:
            path: /envoy/healthz
            port: 9443
            scheme: HTTPS
          failureThreshold: 2
          initialDelaySeconds: 1
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        # label selector for nodes
        disableNetBind: true
        floatingUserId: false
        fsGroup: 10101
        gracefulShutdown:
          enabled: true
          sleepTimeSeconds: 30
        httpPort: 9080
        httpsPort: 9443
        image: {}
        probes: true
        runAsUser: 10101
        runUnprivileged: true
        nodeSelector:
          node-role.kubernetes.io/ingress-gloo: "true"
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 150Mi
        terminationGracePeriodSeconds: 90
        tolerations:
          - key: "dedicated"
            operator: "Equal"
            value: "ingress-gloo"
            effect: "NoSchedule"
      readConfig: false
      service:
        extraAnnotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "8081"
          prometheus.io/scrape: "true"
        type: NodePort
        name: gateway-proxy-internal-svc
        httpPort: 9080
        httpsFirst: false
        httpsPort: 9443
        httpsNodePort: 30543

