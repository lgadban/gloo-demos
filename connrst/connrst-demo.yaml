---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-nginx
data:
  default.conf: |
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      error_log  /var/log/nginx/error.log debug;
      server_name localhost;

      location / {
        root /data;
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  sessionAffinity: ClientIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: create-content
          image: alpine
          command: ['/bin/sh', '-c']
          args: ['dd if=/dev/urandom of=/data/small-file.txt bs=1M count=4']
          volumeMounts:
            - name: workspace
              mountPath: /data
      containers:
      - name: nginx
        image: nginx:1.15.1-alpine
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 80
        #resources:
        #  limits:
        #    cpu: "1"
        #    memory: 1Gi
        #  requests:
        #    cpu: "1"
        #    memory: 1Gi
        volumeMounts:
          - name: workspace
            mountPath: /data
          - name: config-nginx
            mountPath: /etc/nginx/conf.d/
      volumes:
      - name: workspace
        emptyDir:
      - name: config-nginx
        configMap:
          name: config-nginx
